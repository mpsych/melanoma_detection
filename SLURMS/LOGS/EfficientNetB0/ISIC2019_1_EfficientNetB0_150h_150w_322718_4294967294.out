Tue 27 Feb 2024 05:37:19 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2019']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB0
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb0 (Functional)  (None, 1280)              4049571   
_________________________________________________________________
dense (Dense)                (None, 512)               655872    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 4,840,357
Trainable params: 789,250
Non-trainable params: 4,051,107
_________________________________________________________________
Fitting ISIC2019_aug_EfficientNetB0_150h_150w_None model...
model_name: ISIC2019_aug_EfficientNetB0_150h_150w_None
Epoch: 1 loss: 0.6652 accuracy: 0.6160 val_loss: 0.5729 val_accuracy: 0.8295
Epoch: 2 loss: 0.6593 accuracy: 0.6273 val_loss: 0.5535 val_accuracy: 0.8295
Epoch: 3 loss: 0.6569 accuracy: 0.6273 val_loss: 0.5922 val_accuracy: 0.8295
Epoch: 4 loss: 0.6567 accuracy: 0.6275 val_loss: 0.5798 val_accuracy: 0.8295
Epoch: 5 loss: 0.6552 accuracy: 0.6271 val_loss: 0.5594 val_accuracy: 0.8295
Epoch: 6 loss: 0.6546 accuracy: 0.6269 val_loss: 0.5501 val_accuracy: 0.8295
Epoch: 7 loss: 0.6528 accuracy: 0.6280 val_loss: 0.5400 val_accuracy: 0.8295
Epoch: 8 loss: 0.6522 accuracy: 0.6285 val_loss: 0.5289 val_accuracy: 0.8285
Epoch: 9 loss: 0.6498 accuracy: 0.6334 val_loss: 0.5288 val_accuracy: 0.8293
Epoch: 10 loss: 0.6512 accuracy: 0.6305 val_loss: 0.5361 val_accuracy: 0.8295
Epoch: 11 loss: 0.6500 accuracy: 0.6321 val_loss: 0.5415 val_accuracy: 0.8234
Epoch: 12 loss: 0.6488 accuracy: 0.6360 val_loss: 0.5216 val_accuracy: 0.8295
Epoch: 13 loss: 0.6491 accuracy: 0.6338 val_loss: 0.5231 val_accuracy: 0.8295
Epoch: 14 loss: 0.6493 accuracy: 0.6305 val_loss: 0.5285 val_accuracy: 0.8163
Epoch: 15 loss: 0.6485 accuracy: 0.6354 val_loss: 0.5312 val_accuracy: 0.8123
Epoch: 16 loss: 0.6484 accuracy: 0.6344 val_loss: 0.5104 val_accuracy: 0.8293
Epoch: 17 loss: 0.6469 accuracy: 0.6355 val_loss: 0.5337 val_accuracy: 0.8141
Epoch: 18 loss: 0.6483 accuracy: 0.6328 val_loss: 0.5424 val_accuracy: 0.8036
Epoch: 19 loss: 0.6479 accuracy: 0.6361 val_loss: 0.5133 val_accuracy: 0.8295
Epoch: 20 loss: 0.6470 accuracy: 0.6354 val_loss: 0.5258 val_accuracy: 0.8263
Job ended!
