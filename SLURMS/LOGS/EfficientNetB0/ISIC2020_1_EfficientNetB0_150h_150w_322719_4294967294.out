Tue 27 Feb 2024 05:37:39 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2020']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB0
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb0 (Functional)  (None, 1280)              4049571   
_________________________________________________________________
dense (Dense)                (None, 512)               655872    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 4,840,357
Trainable params: 789,250
Non-trainable params: 4,051,107
_________________________________________________________________
Fitting ISIC2020_aug_EfficientNetB0_150h_150w_None model...
model_name: ISIC2020_aug_EfficientNetB0_150h_150w_None
Epoch: 1 loss: 0.5155 accuracy: 0.7948 val_loss: 0.2306 val_accuracy: 0.9843
Epoch: 2 loss: 0.4849 accuracy: 0.8111 val_loss: 0.2337 val_accuracy: 0.9843
Epoch: 3 loss: 0.4848 accuracy: 0.8111 val_loss: 0.2366 val_accuracy: 0.9843
Epoch: 4 loss: 0.4847 accuracy: 0.8111 val_loss: 0.2364 val_accuracy: 0.9843
Epoch: 5 loss: 0.4849 accuracy: 0.8111 val_loss: 0.2374 val_accuracy: 0.9843
Epoch: 6 loss: 0.4847 accuracy: 0.8111 val_loss: 0.2406 val_accuracy: 0.9843
Epoch: 7 loss: 0.4847 accuracy: 0.8112 val_loss: 0.2358 val_accuracy: 0.9843
Epoch: 8 loss: 0.4847 accuracy: 0.8112 val_loss: 0.2374 val_accuracy: 0.9843
Epoch: 9 loss: 0.4846 accuracy: 0.8112 val_loss: 0.2289 val_accuracy: 0.9843
Epoch: 10 loss: 0.4845 accuracy: 0.8112 val_loss: 0.2284 val_accuracy: 0.9843
Epoch: 11 loss: 0.4847 accuracy: 0.8111 val_loss: 0.2421 val_accuracy: 0.9843
Epoch: 12 loss: 0.4847 accuracy: 0.8111 val_loss: 0.2347 val_accuracy: 0.9843
Epoch: 13 loss: 0.4847 accuracy: 0.8112 val_loss: 0.2312 val_accuracy: 0.9843
Epoch: 14 loss: 0.4846 accuracy: 0.8112 val_loss: 0.2301 val_accuracy: 0.9843
Epoch: 15 loss: 0.4847 accuracy: 0.8111 val_loss: 0.2316 val_accuracy: 0.9843
Epoch: 16 loss: 0.4847 accuracy: 0.8111 val_loss: 0.2253 val_accuracy: 0.9843
Epoch: 17 loss: 0.4847 accuracy: 0.8112 val_loss: 0.2232 val_accuracy: 0.9843
Epoch: 18 loss: 0.4846 accuracy: 0.8112 val_loss: 0.2365 val_accuracy: 0.9843
Epoch: 19 loss: 0.4847 accuracy: 0.8112 val_loss: 0.2350 val_accuracy: 0.9843
Epoch: 20 loss: 0.4847 accuracy: 0.8111 val_loss: 0.2328 val_accuracy: 0.9843
Job ended!
