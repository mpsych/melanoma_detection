Tue 27 Feb 2024 04:29:55 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['_7_point_criteria']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB0
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb0 (Functional)  (None, 1280)              4049571   
_________________________________________________________________
dense (Dense)                (None, 512)               655872    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 4,840,357
Trainable params: 789,250
Non-trainable params: 4,051,107
_________________________________________________________________
Fitting _7_point_criteria_aug_EfficientNetB0_150h_150w_None model...
model_name: _7_point_criteria_aug_EfficientNetB0_150h_150w_None
Epoch: 1 loss: 0.6925 accuracy: 0.5258 val_loss: 0.6845 val_accuracy: 0.6995
Epoch: 2 loss: 0.6850 accuracy: 0.5374 val_loss: 0.6771 val_accuracy: 0.6995
Epoch: 3 loss: 0.6822 accuracy: 0.5607 val_loss: 0.6704 val_accuracy: 0.6995
Epoch: 4 loss: 0.6668 accuracy: 0.6073 val_loss: 0.6647 val_accuracy: 0.6995
Epoch: 5 loss: 0.6733 accuracy: 0.5740 val_loss: 0.6598 val_accuracy: 0.6995
Epoch: 6 loss: 0.6645 accuracy: 0.6057 val_loss: 0.6545 val_accuracy: 0.6995
Epoch: 7 loss: 0.6592 accuracy: 0.6190 val_loss: 0.6508 val_accuracy: 0.6995
Epoch: 8 loss: 0.6491 accuracy: 0.6323 val_loss: 0.6482 val_accuracy: 0.6995
Epoch: 9 loss: 0.6422 accuracy: 0.6456 val_loss: 0.6448 val_accuracy: 0.6995
Epoch: 10 loss: 0.6408 accuracy: 0.6223 val_loss: 0.6419 val_accuracy: 0.6995
Epoch: 11 loss: 0.6428 accuracy: 0.6456 val_loss: 0.6392 val_accuracy: 0.6995
Epoch: 12 loss: 0.6390 accuracy: 0.6473 val_loss: 0.6380 val_accuracy: 0.6995
Epoch: 13 loss: 0.6461 accuracy: 0.6539 val_loss: 0.6358 val_accuracy: 0.6995
Epoch: 14 loss: 0.6424 accuracy: 0.6339 val_loss: 0.6335 val_accuracy: 0.6995
Epoch: 15 loss: 0.6307 accuracy: 0.6589 val_loss: 0.6321 val_accuracy: 0.6995
Epoch: 16 loss: 0.6148 accuracy: 0.6822 val_loss: 0.6279 val_accuracy: 0.6995
Epoch: 17 loss: 0.6113 accuracy: 0.6722 val_loss: 0.6295 val_accuracy: 0.6995
Epoch: 18 loss: 0.6197 accuracy: 0.6639 val_loss: 0.6316 val_accuracy: 0.6995
Epoch: 19 loss: 0.6176 accuracy: 0.6672 val_loss: 0.6283 val_accuracy: 0.6995
Epoch: 20 loss: 0.6313 accuracy: 0.6489 val_loss: 0.6271 val_accuracy: 0.6995
Job ended!
