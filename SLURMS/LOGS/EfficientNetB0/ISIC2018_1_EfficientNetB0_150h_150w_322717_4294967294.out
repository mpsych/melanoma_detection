Tue 27 Feb 2024 05:37:18 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2018']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB0
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb0 (Functional)  (None, 1280)              4049571   
_________________________________________________________________
dense (Dense)                (None, 512)               655872    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 4,840,357
Trainable params: 789,250
Non-trainable params: 4,051,107
_________________________________________________________________
Fitting ISIC2018_aug_EfficientNetB0_150h_150w_None model...
model_name: ISIC2018_aug_EfficientNetB0_150h_150w_None
Epoch: 1 loss: 0.6147 accuracy: 0.6916 val_loss: 0.4568 val_accuracy: 0.8912
Epoch: 2 loss: 0.5729 accuracy: 0.7275 val_loss: 0.3799 val_accuracy: 0.8912
Epoch: 3 loss: 0.5656 accuracy: 0.7323 val_loss: 0.3610 val_accuracy: 0.8912
Epoch: 4 loss: 0.5647 accuracy: 0.7305 val_loss: 0.4170 val_accuracy: 0.8912
Epoch: 5 loss: 0.5619 accuracy: 0.7348 val_loss: 0.3927 val_accuracy: 0.8912
Epoch: 6 loss: 0.5599 accuracy: 0.7388 val_loss: 0.3692 val_accuracy: 0.8912
Epoch: 7 loss: 0.5589 accuracy: 0.7363 val_loss: 0.5139 val_accuracy: 0.8446
Epoch: 8 loss: 0.5577 accuracy: 0.7380 val_loss: 0.4375 val_accuracy: 0.8705
Epoch: 9 loss: 0.5572 accuracy: 0.7387 val_loss: 0.4302 val_accuracy: 0.8808
Epoch: 10 loss: 0.5566 accuracy: 0.7382 val_loss: 0.3635 val_accuracy: 0.8912
Epoch: 11 loss: 0.5572 accuracy: 0.7380 val_loss: 0.3865 val_accuracy: 0.8912
Epoch: 12 loss: 0.5531 accuracy: 0.7403 val_loss: 0.3897 val_accuracy: 0.8912
Epoch: 13 loss: 0.5544 accuracy: 0.7393 val_loss: 0.3627 val_accuracy: 0.8912
Epoch: 14 loss: 0.5534 accuracy: 0.7376 val_loss: 0.3402 val_accuracy: 0.8912
Epoch: 15 loss: 0.5514 accuracy: 0.7411 val_loss: 0.3958 val_accuracy: 0.8912
Epoch: 16 loss: 0.5513 accuracy: 0.7400 val_loss: 0.3981 val_accuracy: 0.8912
Epoch: 17 loss: 0.5502 accuracy: 0.7416 val_loss: 0.3711 val_accuracy: 0.8912
Epoch: 18 loss: 0.5516 accuracy: 0.7380 val_loss: 0.3792 val_accuracy: 0.8912
Epoch: 19 loss: 0.5481 accuracy: 0.7408 val_loss: 0.3540 val_accuracy: 0.8912
Epoch: 20 loss: 0.5444 accuracy: 0.7457 val_loss: 0.4048 val_accuracy: 0.8756
Job ended!
