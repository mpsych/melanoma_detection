Tue 27 Feb 2024 05:38:41 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['MEDNODE']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB0
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb0 (Functional)  (None, 1280)              4049571   
_________________________________________________________________
dense (Dense)                (None, 512)               655872    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 4,840,357
Trainable params: 789,250
Non-trainable params: 4,051,107
_________________________________________________________________
Fitting MEDNODE_aug_EfficientNetB0_150h_150w_None model...
model_name: MEDNODE_aug_EfficientNetB0_150h_150w_None
Epoch: 1 loss: 0.6942 accuracy: 0.5446 val_loss: 0.6937 val_accuracy: 0.4118
Epoch: 2 loss: 0.7001 accuracy: 0.5134 val_loss: 0.6949 val_accuracy: 0.4118
Epoch: 3 loss: 0.7047 accuracy: 0.5045 val_loss: 0.6962 val_accuracy: 0.4118
Epoch: 4 loss: 0.7091 accuracy: 0.4911 val_loss: 0.6974 val_accuracy: 0.4118
Epoch: 5 loss: 0.6878 accuracy: 0.5536 val_loss: 0.6985 val_accuracy: 0.4118
Epoch: 6 loss: 0.6900 accuracy: 0.5536 val_loss: 0.6996 val_accuracy: 0.4118
Epoch: 7 loss: 0.6960 accuracy: 0.5223 val_loss: 0.7006 val_accuracy: 0.4118
Epoch: 8 loss: 0.6877 accuracy: 0.5312 val_loss: 0.7017 val_accuracy: 0.4118
Epoch: 9 loss: 0.6943 accuracy: 0.4955 val_loss: 0.7030 val_accuracy: 0.4118
Epoch: 10 loss: 0.7003 accuracy: 0.5312 val_loss: 0.7042 val_accuracy: 0.4118
Epoch: 11 loss: 0.6831 accuracy: 0.5491 val_loss: 0.7054 val_accuracy: 0.4118
Epoch: 12 loss: 0.6812 accuracy: 0.5223 val_loss: 0.7065 val_accuracy: 0.4118
Epoch: 13 loss: 0.6889 accuracy: 0.5491 val_loss: 0.7070 val_accuracy: 0.4118
Epoch: 14 loss: 0.6923 accuracy: 0.5759 val_loss: 0.7079 val_accuracy: 0.4118
Epoch: 15 loss: 0.7101 accuracy: 0.5045 val_loss: 0.7088 val_accuracy: 0.4118
Epoch: 16 loss: 0.6803 accuracy: 0.5759 val_loss: 0.7099 val_accuracy: 0.4118
Epoch: 17 loss: 0.7058 accuracy: 0.5357 val_loss: 0.7107 val_accuracy: 0.4118
Epoch: 18 loss: 0.6997 accuracy: 0.5268 val_loss: 0.7110 val_accuracy: 0.4118
Epoch: 19 loss: 0.6885 accuracy: 0.5893 val_loss: 0.7120 val_accuracy: 0.4118
Epoch: 20 loss: 0.6867 accuracy: 0.5670 val_loss: 0.7129 val_accuracy: 0.4118
Job ended!
