Tue 27 Feb 2024 04:35:49 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB0
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 1 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb0 (Functional)  (None, 1280)              4049571   
_________________________________________________________________
dense (Dense)                (None, 512)               655872    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 4,840,357
Trainable params: 789,250
Non-trainable params: 4,051,107
_________________________________________________________________
Fitting ISIC2016_aug_EfficientNetB0_150h_150w_None model...
model_name: ISIC2016_aug_EfficientNetB0_150h_150w_None
Epoch: 1 loss: 0.6988 accuracy: 0.5082 val_loss: 0.6707 val_accuracy: 0.8000
Epoch: 2 loss: 0.6918 accuracy: 0.5412 val_loss: 0.6548 val_accuracy: 0.8000
Epoch: 3 loss: 0.6836 accuracy: 0.5542 val_loss: 0.6388 val_accuracy: 0.8000
Epoch: 4 loss: 0.6834 accuracy: 0.5724 val_loss: 0.6305 val_accuracy: 0.8000
Epoch: 5 loss: 0.6779 accuracy: 0.5950 val_loss: 0.6200 val_accuracy: 0.8000
Epoch: 6 loss: 0.6752 accuracy: 0.6097 val_loss: 0.6112 val_accuracy: 0.8000
Epoch: 7 loss: 0.6731 accuracy: 0.6123 val_loss: 0.6098 val_accuracy: 0.8000
Epoch: 8 loss: 0.6742 accuracy: 0.6080 val_loss: 0.6009 val_accuracy: 0.8000
Epoch: 9 loss: 0.6705 accuracy: 0.6149 val_loss: 0.5969 val_accuracy: 0.8000
Epoch: 10 loss: 0.6678 accuracy: 0.6149 val_loss: 0.5910 val_accuracy: 0.8000
Epoch: 11 loss: 0.6704 accuracy: 0.6097 val_loss: 0.5878 val_accuracy: 0.8000
Epoch: 12 loss: 0.6700 accuracy: 0.6167 val_loss: 0.5871 val_accuracy: 0.8000
Epoch: 13 loss: 0.6683 accuracy: 0.6175 val_loss: 0.5836 val_accuracy: 0.8000
Epoch: 14 loss: 0.6690 accuracy: 0.6158 val_loss: 0.5848 val_accuracy: 0.8000
Epoch: 15 loss: 0.6671 accuracy: 0.6167 val_loss: 0.5864 val_accuracy: 0.8000
Epoch: 16 loss: 0.6658 accuracy: 0.6167 val_loss: 0.5879 val_accuracy: 0.8000
Epoch: 17 loss: 0.6680 accuracy: 0.6149 val_loss: 0.5783 val_accuracy: 0.8000
Epoch: 18 loss: 0.6671 accuracy: 0.6123 val_loss: 0.5703 val_accuracy: 0.8000
Epoch: 19 loss: 0.6712 accuracy: 0.6123 val_loss: 0.5792 val_accuracy: 0.8000
Epoch: 20 loss: 0.6681 accuracy: 0.6167 val_loss: 0.6012 val_accuracy: 0.8000
Job ended!
