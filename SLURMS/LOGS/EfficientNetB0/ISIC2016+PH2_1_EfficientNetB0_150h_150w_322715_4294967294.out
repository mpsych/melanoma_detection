Tue 27 Feb 2024 05:36:39 AM EST
Python 3.9.7
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
My SLURM_ARRAY_TASK_ID: 
DB: ['ISIC2016', 'PH2']
IMG_SIZE: [150, 150]
CLASSIFIER: EfficientNetB0
SELF_AUG: 1
JOB_INDEX: None
Combining...
Combining 1 db out of 2 dbs
Combining 2 db out of 2 dbs
Stacking training images
Stacking training labels
Stacking validation images
Stacking validation labels
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
efficientnetb0 (Functional)  (None, 1280)              4049571   
_________________________________________________________________
dense (Dense)                (None, 512)               655872    
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
batch_normalization (BatchNo (None, 512)               2048      
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
batch_normalization_1 (Batch (None, 256)               1024      
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 514       
=================================================================
Total params: 4,840,357
Trainable params: 789,250
Non-trainable params: 4,051,107
_________________________________________________________________
Fitting ISIC2016+PH2_aug_EfficientNetB0_150h_150w_None model...
model_name: ISIC2016+PH2_aug_EfficientNetB0_150h_150w_None
Epoch: 1 loss: 0.6909 accuracy: 0.5175 val_loss: 0.6625 val_accuracy: 0.8000
Epoch: 2 loss: 0.6867 accuracy: 0.5476 val_loss: 0.6397 val_accuracy: 0.8000
Epoch: 3 loss: 0.6812 accuracy: 0.5758 val_loss: 0.6224 val_accuracy: 0.8000
Epoch: 4 loss: 0.6798 accuracy: 0.6019 val_loss: 0.6100 val_accuracy: 0.8000
Epoch: 5 loss: 0.6722 accuracy: 0.6047 val_loss: 0.5994 val_accuracy: 0.8000
Epoch: 6 loss: 0.6698 accuracy: 0.6184 val_loss: 0.5903 val_accuracy: 0.8000
Epoch: 7 loss: 0.6705 accuracy: 0.6156 val_loss: 0.5874 val_accuracy: 0.8000
Epoch: 8 loss: 0.6654 accuracy: 0.6177 val_loss: 0.5870 val_accuracy: 0.8000
Epoch: 9 loss: 0.6681 accuracy: 0.6184 val_loss: 0.5858 val_accuracy: 0.8000
Epoch: 10 loss: 0.6657 accuracy: 0.6191 val_loss: 0.5812 val_accuracy: 0.8000
Epoch: 11 loss: 0.6673 accuracy: 0.6163 val_loss: 0.5782 val_accuracy: 0.8000
Epoch: 12 loss: 0.6672 accuracy: 0.6170 val_loss: 0.5722 val_accuracy: 0.8000
Epoch: 13 loss: 0.6666 accuracy: 0.6198 val_loss: 0.5714 val_accuracy: 0.8000
Epoch: 14 loss: 0.6666 accuracy: 0.6177 val_loss: 0.5790 val_accuracy: 0.8000
Epoch: 15 loss: 0.6645 accuracy: 0.6218 val_loss: 0.5695 val_accuracy: 0.8000
Epoch: 16 loss: 0.6663 accuracy: 0.6170 val_loss: 0.5725 val_accuracy: 0.8000
Epoch: 17 loss: 0.6678 accuracy: 0.6205 val_loss: 0.5790 val_accuracy: 0.8000
Epoch: 18 loss: 0.6662 accuracy: 0.6177 val_loss: 0.5652 val_accuracy: 0.8000
Epoch: 19 loss: 0.6623 accuracy: 0.6218 val_loss: 0.5859 val_accuracy: 0.8000
Epoch: 20 loss: 0.6647 accuracy: 0.6205 val_loss: 0.5913 val_accuracy: 0.8000
Job ended!
